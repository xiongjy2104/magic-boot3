server:
  port: 8081
  compression:
    enabled: true
    min-response-size: 128
  http2:
    enabled: true
#  ssl:
#    key-store: 'classpath:mydomain.com.jks'
#    key-store-password: 'classpath:jks-password.txt'
#    key-store-type: 'JKS'
spring:
  application:
    name: public-great-query
  profiles:
    active: dev
  servlet:
    multipart:
      max-file-size: 200MB
      max-request-size: 200MB
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
#  cloud:
#    nacos:
#      discovery:
#        username: ${spring.cloud.nacos.config.username}
#        password: ${spring.cloud.nacos.config.password}
#        server-addr: ${spring.cloud.nacos.config.server-addr}
#        namespace: ${spring.cloud.nacos.config.namespace}
#      config:
#        username: ${NACOS_USERNAME:dev}
#        password: ${NACOS_PASSWORD:123456}
#        server-addr: ${NACOS_ADDR:10.30.46.3:8840,10.30.46.3:8842,10.30.46.3:8844} # Nacos服务地址
#        namespace: ${NACOS_NAMESPACE:11111111-2222-4444-8888-ccccccccccccc} # Nacos命名空间ID
#        group: DEFAULT_GROUP # 配置分组名称
#        data-id: demo-app # 配置ID，通常与spring.application.name相同
#        extension-configs:
#          - data-id: another-data-id # 另一个配置ID
#            group: ANOTHER_GROUP # 另一个配置分组名称
#        file-extension: yaml # 配置文件格式，默认为properties
  # 配置Redis
#  redis:
#    host: 127.0.0.1
#    port: 6379
#    database: 0  # Redis数据库索引（默认为0）
#    password: 123456
#    timeout: 10000 # 连接超时时间（毫秒）
#    pool:
#      max-active: 8 # 连接池最大连接数（使用负值表示没有限制）
#      max-idle: 8 # 连接池中的最大空闲连接
#      max-wait: -1 # 连接池最大阻塞等待时间（使用负值表示没有限制）
#      min-idle: 0 # 连接池中的最小空闲连接
   # 配置ElasticSearch
#  elasticsearch:
#    rest:
#      uris: http://127.0.0.1:9200
#      username: elastic
#      password: 123456789
#  nacos:
#    discovery:
#      autoRegister: true #可以让nacos自动注册
#      server-addr: 127.0.0.1:8848 #nacos的注册中心地址

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://localhost/magic-boot?useSSL=false&zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF8&autoReconnect=true&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
#    url: jdbc:arrow-flight-sql://localhost/magic-boot?useSSL=false&zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF8&autoReconnect=true&allowPublicKeyRetrieval=true&serverTimezone=Asia/Shanghai
#    url: jdbc:arrow-flight-sql://{FE_HOST}:{fe.conf:arrow_flight_sql_port}?useServerPrepStmts=false&cachePrepStmts=true&useSSL=false&useEncryption=false";
    username: root
    password: root
    druid:
      # 下面为连接池的补充设置，应用到上面所有数据源中
      # 初始化大小，最小，最大
      initial-size: 5
      min-idle: 5
      max-active: 1000
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      max-pool-prepared-statement-per-connection-size: 20
      filters: stat,wall
      use-global-data-source-stat: true
      # 配置监控服务器
      stat-view-servlet:
        enabled: true
        login-username: admin
        login-password: 123456
        reset-enable: false
        url-pattern: /druid/*
        # 添加IP白名单
        allow: ""
        # 添加IP黑名单，当白名单和黑名单重复时，黑名单优先级更高
        #deny:
      web-stat-filter:
        # 添加过滤规则
        url-pattern: /*
        # 忽略过滤格式
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*"
# 上传路径
upload:
  dir: D:/upload/

magic-api:
  web: /magic/web
  show-sql: true #配置打印SQL
  sql-column-case: camel
  prefix: /api # 接口前缀，可以不配置，这里配置成 /api, 方便后期做安全规则

#  resource:
#    location: data/magic-api
  resource: # 配置存储方式，默认使用的是文件，笔者认为数据库还是方便一些
    #  location: data/magic-api  # 配置存储方式，文件存放目录
    type: database # 配置存储在数据库中
    tableName: magic_api_file # 数据库中的表名
    prefix: /magic-api # key前缀
    readonly: false # 是否是只读模式
  backup: #备份相关配置
    enable: true #是否启用
    max-history: -1 #备份保留天数，-1为永久保留
    table-name: magic_backup_record_v2 #使用数据库存储备份时的表名
  page:
    page: current
    size: size
  cache:
    enable: true  #开启缓存，默认是不开启的
    ttl: 86400000 #有效期1Day，默认-1 即永不过期
  response-code:
    success: 200 #执行成功的code值
    invalid: 400 #参数验证未通过的code值
    exception: 500 #执行出现异常的code值
#  crud: # CRUD相关配置
#    logic-delete-column: is_del #逻辑删除列
#    logic-delete-value: 1 #逻辑删除值
  security:
    username: admin
    password: 123456

# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: token
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  active-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false

oss:
  enable: false
  endpoint: ""
  accessKeyId: ""
  accessKeySecret: ""
  roleArn: ""
  roleSessionName: ""
  bucket: ""
  bucketDomain: ""